// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/gardener/etcd-druid/api/core/v1alpha1"
	corev1alpha1 "github.com/gardener/etcd-druid/client/clientset/versioned/typed/core/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeEtcdOpsTasks implements EtcdOpsTaskInterface
type fakeEtcdOpsTasks struct {
	*gentype.FakeClientWithList[*v1alpha1.EtcdOpsTask, *v1alpha1.EtcdOpsTaskList]
	Fake *FakeDruidV1alpha1
}

func newFakeEtcdOpsTasks(fake *FakeDruidV1alpha1, namespace string) corev1alpha1.EtcdOpsTaskInterface {
	return &fakeEtcdOpsTasks{
		gentype.NewFakeClientWithList[*v1alpha1.EtcdOpsTask, *v1alpha1.EtcdOpsTaskList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("etcdopstasks"),
			v1alpha1.SchemeGroupVersion.WithKind("EtcdOpsTask"),
			func() *v1alpha1.EtcdOpsTask { return &v1alpha1.EtcdOpsTask{} },
			func() *v1alpha1.EtcdOpsTaskList { return &v1alpha1.EtcdOpsTaskList{} },
			func(dst, src *v1alpha1.EtcdOpsTaskList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.EtcdOpsTaskList) []*v1alpha1.EtcdOpsTask {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.EtcdOpsTaskList, items []*v1alpha1.EtcdOpsTask) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
