#!/usr/bin/env bash

set -e

repo_root_dir="$1"
repo_name="${2:-github.com/gardener/gardener}"
descriptor_out_file="${COMPONENT_DESCRIPTOR_PATH}"

echo "Enriching component descriptor from ${BASE_DEFINITION_PATH}"

if [[ -f "$repo_root_dir/charts/images.yaml" ]]; then
  # translates all images defined the images.yaml into component descriptor resources.
  # For detailed documentation see https://github.com/gardener/component-cli/blob/main/docs/reference/components-cli_image-vector_add.md
  component-cli image-vector add --comp-desc ${BASE_DEFINITION_PATH} \
    --image-vector "$repo_root_dir/charts/images.yaml" \
    --component-prefixes eu.gcr.io/gardener-project/gardener \
    --generic-dependencies hyperkube,kube-apiserver,kube-controller-manager,kube-scheduler,kube-proxy
fi

if [[ -d "$repo_root_dir/charts/" ]]; then
  for image_tpl_path in "$repo_root_dir/charts/"*"/templates/_images.tpl"; do
    if [[ ! -f "$image_tpl_path" ]]; then
      continue
    fi

    outputFile=$(sed 's/{{-//' $image_tpl_path | sed 's/}}//' | sed 's/define//' | sed 's/-//' | sed 's/end//' | sed 's/"//' | sed 's/"//' |sed 's/image.//' |  sed -e 's/^[ \t]*//' | awk -v RS= '{for (i=1; i<=NF; i++) printf "%s%s", $i, (i==NF?"\n":" ")}')
    echo "enriching component descriptor from ${image_tpl_path}"

    while read p; do
      line="$(echo -e "$p")"
      IFS=' ' read -r -a array <<< "$line"
      IFS=': ' read -r -a imageAndTag <<< ${array[1]}

      NAME=${array[0]}
      REPOSITORY=${imageAndTag[0]}
      TAG=${imageAndTag[1]}

      gardener="eu.gcr.io/gardener-project/gardener"
      if [[ "$NAME" == "hyperkube" ]]; then
        ${ADD_DEPENDENCIES_CMD} --generic-dependencies "{\"name\": \"$NAME\", \"version\": \"$TAG\"}"
      elif [[ $REPOSITORY =~ "eu.gcr.io/gardener-project/gardener"* ]]; then
        ${ADD_DEPENDENCIES_CMD} --generic-dependencies "{\"name\": \"$NAME\", \"version\": \"$TAG\"}"
      else
        ${ADD_DEPENDENCIES_CMD} --container-image-dependencies "{\"name\": \"${NAME}\", \"image_reference\": \"${REPOSITORY}:${TAG}\", \"version\": \"$TAG\"}"
      fi
    done < <(echo "$outputFile")
  done
fi

cp "${BASE_DEFINITION_PATH}" "${descriptor_out_file}"
