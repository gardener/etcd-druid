---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMapName }}
  namespace: {{ .Release.Namespace }}
  labels:
    name: etcd
    instance: {{ .Values.name }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
  ownerReferences:
  - apiVersion: druid.gardener.cloud/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Etcd
    name: {{ .Values.name }}
    uid: {{ .Values.uid }}
data:
  etcd.conf.yaml: |-
    # Human-readable name for this member.
    name: etcd-{{ printf "%.6s" .Values.uid }}

    # Path to the data directory.
    data-dir: /var/etcd/data/new.etcd

    # metrics configuration
    metrics: {{ .Values.etcd.metrics }}

    # Number of committed transactions to trigger a snapshot to disk.
    snapshot-count: 75000

    # Accept etcd V2 client requests
    enable-v2: false

    # Raise alarms when backend size exceeds the given quota. 0 means use the
    # default quota.
    {{- if .Values.backup.etcdQuotaBytes }}
    quota-backend-bytes: {{ int $.Values.backup.etcdQuotaBytes }}
    {{- end }}

    # List of comma separated URLs to listen on for client traffic.
    listen-client-urls: {{ if .Values.etcd.enableTLS }}https{{ else }}http{{ end }}://0.0.0.0:{{ .Values.etcd.clientPort }}

    # List of this member's client URLs to advertise to the public.
    # The URLs needed to be a comma-separated list.
    advertise-client-urls: {{ if .Values.etcd.enableTLS }}https{{ else }}http{{ end }}://0.0.0.0:{{ .Values.etcd.clientPort }}

    # Initial cluster token for the etcd cluster during bootstrap.
    initial-cluster-token: {{ .Values.etcd.initialClusterToken }}

    # Initial cluster state ('new' or 'existing').
    initial-cluster-state: {{ .Values.etcd.initialClusterState }}

    {{- if .Values.sharedConfig }}
    # auto-compaction-mode ("periodic" or "revision").
    {{- if .Values.sharedConfig.autoCompactionMode }}
    auto-compaction-mode: {{ .Values.sharedConfig.autoCompactionMode }}
    {{- end }}

    # auto-compaction-retention defines Auto compaction retention length for etcd.
    {{- if .Values.sharedConfig.autoCompactionRetention }}
    auto-compaction-retention: {{ .Values.sharedConfig.autoCompactionRetention }}
    {{- end }}
    {{- end }}

{{- if .Values.etcd.enableTLS }}
    client-transport-security:
      # Path to the client server TLS cert file.
      cert-file: /var/etcd/ssl/server/tls.crt

      # Path to the client server TLS key file.
      key-file: /var/etcd/ssl/server/tls.key

      # Enable client cert authentication.
      client-cert-auth: true

      # Path to the client server TLS trusted CA cert file.
      trusted-ca-file: /var/etcd/ssl/ca/{{ .Values.tlsCASecretKey }}

      # Client TLS using generated certificates
      auto-tls: false
{{- end }}
